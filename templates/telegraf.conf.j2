# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


# Global tags can be specified here in key="value" format.
[global_tags]
{% for key,value in telegraf_global_tags.iteritems() %}
  {{ key }} = "{{ value }}"
{% endfor %}


# Configuration for telegraf agent
[agent]
{% for key,value in telegraf_agent|dictsort %}
{# Boolean #}
{% if value|string == 'True' or value|string == 'False' %}
  {{ key }} = {{ value|lower }}
{% elif value is number %}
  {{ key }} = {{ value }}
{% elif value is string %}
  {{ key }} = "{{ value }}"
{# LIST - non-empty #}
{% elif value is iterable and value is not mapping and value %}
  {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
  {{ key }} = {{ value }}
{% endif %}
{% endfor %}

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

{% for output in telegraf_outputs %}
[[outputs.{{ output.name }}]]
{% for key,value in output.iteritems() %}
{% if key != 'name' %}
{% if value|string == 'True' or value|string == 'False' %}
  {{ key }} = {{ value|lower }}
{% elif value is number %}
  {{ key }} = {{ value }}
{% elif value is string %}
  {{ key }} = "{{ value }}"
{# LIST - non-empty #}
{% elif value is iterable and value is not mapping and value %}
  {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
  {{ key }} = {{ value }}
{% endif %}
{% endif %}
{% endfor %}

{% endfor %}


##############################################################################
#                            INPUT PLUGINS                                   #
##############################################################################

{% for input in telegraf_default_inputs %}
[[inputs.{{ input.name }}]]
{% for key,value in input.iteritems() %}
{% if key != 'name' %}
{% if value|string == 'True' or value|string == 'False' %}
  {{ key }} = {{ value|lower }}
{% elif value is number %}
  {{ key }} = {{ value }}
{% elif value is string %}
  {{ key }} = "{{ value }}"
{# LIST - non-empty #}
{% elif value is iterable and value is not mapping and value %}
  {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
  {{ key }} = {{ value }}
{% endif %}
{% endif %}
{% endfor %}

{% endfor -%}

{% set special_needs_inputs = ['cloudwatch', 'http_response', 'httpjson',
                                'jolokia', 'postgresql_extensible', 'snmp'] %}
{% for input in telegraf_inputs -%}

{% if input.name in special_needs_inputs %}
{% include 'input-' + input.name + '.conf.j2' %}
{% else -%}

{# non-special-needs input plugins #}
[[inputs.{{ input.name }}]]
{% for key,value in input.iteritems() %}
{% if key != 'name' %}
{% if value|string == 'True' or value|string == 'False' %}
  {{ key }} = {{ value|lower }}
{% elif value is number %}
  {{ key }} = {{ value }}
{% elif value is string %}
  {{ key }} = "{{ value }}"
{# LIST - non-empty #}
{% elif value is iterable and value is not mapping and value %}
  {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
  {{ key }} = {{ value }}
{% endif %}
{% endif %}
{% endfor -%}

{% endif %}

{% endfor %}

###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################

{% for input in telegraf_service_inputs %}

{% if input.name == 'statsd' %}
{% include 'service-input-statsd.conf.j2' %}
{% else %}
[[inputs.{{ input.name }}]]
{% for key,value in input.iteritems() %}
{% if key != 'name' %}
{% if value|string == 'True' or value|string == 'False' %}
  {{ key }} = {{ value|lower }}
{% elif value is number %}
  {{ key }} = {{ value }}
{% elif value is string %}
  {{ key }} = "{{ value }}"
{# LIST - non-empty #}
{% elif value is iterable and value is not mapping and value %}
  {{ key }} = [ "{{ value|join('", "') }}" ]
{% else %}
  {{ key }} = {{ value }}
{% endif %}
{% endif %}
{% endfor %}
{% endif %}

{% endfor -%}
